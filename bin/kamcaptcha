#!/usr/bin/env ruby

require "rubygems"
require "bundler"

require "kamcaptcha"
require "kamcaptcha/generator"

require "trollop"
require "digest"

ARGV << "--help" if ARGV.empty?

opts = Trollop.options do
  banner <<-EOS
Captcha word library generator. Builds images of words to present to users.

  kamcaptcha [options] <output directory>

Usage examples:
  kamcaptcha tmp/
  kamcaptcha --count 100 tmp/
  kamcaptcha --height 100 --width 300 tmp/
  kamcaptcha --length 8-10 --source random --format gif tmp/

A default run creates a "./tmp" directory and generates 10 random five character word PNG images, each 240x50 pixels in size.

Full list of options:
EOS

  opt :salt, "Salt to use, if not specified one will be generated", :type => :string
  opt :count, "How many words to generate", :default => 10
  opt :height, "Height of the word image in pixels", :default => 50
  opt :width, "Width of the word image in pixesks", :default => 240
  opt :source, "How to generate words, [dictionary|random]", :default => "dictionary"
  opt :length, "Length of the word in number of characters, or as a range e.g. 7-9", :default => "5"
  opt :format, "Image file format", :default => "png"
end

if ARGV.empty? || !File.exist?(ARGV[0])
  puts "Output directory does not exist"
  exit 1
end

Kamcaptcha.salt = opts[:salt] || Digest::SHA2.hexdigest((0...64).map { rand(150).chr }.join)

puts "Generating #{opts[:count]} words into #{ARGV[0]} - hang tight...\n\n"

files = Kamcaptcha::Generator.generate(ARGV[0], opts)
files.each_with_index do |file, index|
  puts "\t#{index+1}\t#{file}"
end

puts "\nRemember to set Kamcaptcha.salt = '#{Kamcaptcha.salt}' in your application\n"

